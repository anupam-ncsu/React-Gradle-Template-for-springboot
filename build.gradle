
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
    classpath "com.github.node-gradle:gradle-node-plugin:2.0.0"
    }
}

apply plugin: 'base'
apply plugin: "com.github.node-gradle.node"

node {
    version = '10.14.1'
    npmVersion = '6.4.1'
    download = true
}

npm_run_build {
    inputs.files fileTree('public')
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
    outputs.dir 'build'
}

String testsExecutedMarkerName = "${projectDir}/.tests.executed"
String UnitTestResults = "${projectDir}/.test_result/*"

task Unittest(type: NpmTask) {
    dependsOn assemble
    environment CI: 'true'
    args = ['run', 'test']
    
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
    doLast {
        new File(testsExecutedMarkerName).text = 'delete this file to force re-execution JavaScript tests'
    }
    outputs.file testsExecutedMarkerName
}

check.dependsOn Unittest

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/src")
    args = ["install"]
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src")
    args = ["run", "build"]
}

task appStart(type: NpmTask) {
    args = ["start"]
}

task clear(type: Delete) {
    delete 'test_coverage/'
    delete testsExecutedMarkerName
}
appNpmInstall.dependsOn clear
Unittest.dependsOn appNpmInstall
appNpmBuild.dependsOn appNpmInstall
appStart.dependsOn appNpmBuild


wrapper {
    gradleVersion = '6.1'
}
